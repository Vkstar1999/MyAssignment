// Generated by Dagger (https://dagger.dev).
package com.example.assignment.di;

import com.example.assignment.networks.ApiService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class AppModule_ProvideMyApiFactory implements Factory<ApiService> {
  @Override
  public ApiService get() {
    return provideMyApi();
  }

  public static AppModule_ProvideMyApiFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static ApiService provideMyApi() {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideMyApi());
  }

  private static final class InstanceHolder {
    private static final AppModule_ProvideMyApiFactory INSTANCE = new AppModule_ProvideMyApiFactory();
  }
}
